@model Sabio.Web.Models.ViewModels.ItemViewModel<Guid>
@{
    ViewBag.Title = "ResetPassword";
    Layout = "~/Views/Shared/_LayoutLobster.cshtml";
}

<div class="hidden" id="main">
    <h2>Reset Password</h2>
    <form id="reset-password-form" class="form-horizontal col-lg-4">
            <div class="form-group">
                <label for="newPassword">New Password</label>
                <input class="form-control" type="password" id="newPassword" name="newPassword" placeholder="Enter your new password." />
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <input class="form-control" type="password" id="confirmPassword" name="confirmPassword" placeholder="Please re-enter your password." />

            </div>
        <div class="form-group">
            <input class="btn btn-success" type="submit" value="Submit" />
        </div>
    </form>
</div>

<div class="hidden" id="error">
    <h3 id="message">ERROR</h3>
    <p id="messsage-box">You are not authorized to view this page. If you find they message an error, please contact us</p>
</div>

<div class="container hidden">
    <p id="guid">@Model.Item</p>
</div>



@section Scripts{
    <script type="text/javascript">
        sabio.page.passwordForm = $('#reset-password-form');
        sabio.page.id = '';
        sabio.page.startUp = function () {
            sabio.services.password.checkToken($('#guid').text(), sabio.page.handlers.showPasswordReset, sabio.page.handlers.noEmail);
            sabio.page.setUpValidation();
            sabio.page.passwordForm.on('submit', sabio.page.handlers.checkEmail);
        }

        sabio.page.handlers.showPasswordReset = function (result) {
            if (result.item == null) {
                $('#error').removeClass("hidden");
            }
            else {
                $('#main').removeClass("hidden");
                result = result.item;
                var data = [];
                for (var i in result) {
                    data.push([i, result[i]]);
                }
                sabio.page.id = data[0][1];
            }
        }

        sabio.page.handlers.checkEmail = function (e) {
            e.preventDefault();
            if (sabio.page.passwordForm.valid()) {
                sabio.services.password.put(sabio.page.id, $('#newPassword').val(), $('#confirmPassword').val(), sabio.page.handlers.userFound, sabio.page.handlers.noEmail);
            }

        }

        sabio.page.handlers.userFound = function (result) {
            sabio.layout.showModal('alert-info', 'Password Changed', 'Your password has been changed!');
            $('#main').addClass("hidden");
            $('#globalModal').on('hidden', sabio.page.hideModal());
        }

        sabio.page.hideModal = function () {
            window.location.href = '/login';
        }

        sabio.page.handlers.noEmail = function (result) {
            sabio.layout.showModal('alert-danger', 'Error', 'Please contact your system admnistrator!')
        }

        sabio.page.setUpValidation = function () {
            $.validator.addMethod("pwcheck", function (value, element) {
                return this.optional(element) ||
                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*[\d])(?=.*[\W_]).*$/.test(value);
            });
            sabio.page.passwordForm.validate({
                rules: {
                    newPassword: {
                        required: true,
                        pwcheck: true,
                        minlength: 8
                    },
                    confirmPassword: {
                        required: true,
                        equalTo: "#newPassword",
                        minlength: 8
                    },
                    messages: {
                        newPassword: {
                            required: "Please enter a password",
                            minLength: "Must be at least 8 characters",
                            pwcheck: "Passwords must have at least one non-letter/non-digit special character, one uppercase letter, and one number"
                        },
                        confirmPassword: {
                            required: "Please make sure your passwords match",
                            equalTo: "Please enter the same password as above",
                            minLength: "Must be at least 8 characters"
                        },
                    }
                }
            });
        }

    </script>
}




